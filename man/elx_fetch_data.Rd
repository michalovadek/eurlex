% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/elx_fetch_data.R
\name{elx_fetch_data}
\alias{elx_fetch_data}
\title{Retrieve additional data on EU documents}
\usage{
elx_fetch_data(
  url,
  type = c("title", "text", "ids", "notice"),
  notice = c("tree", "branch", "object"),
  language_1 = "en",
  language_2 = "fr",
  language_3 = "de",
  include_breaks = TRUE,
  html_text = c("text2", "text")
)
}
\arguments{
\item{url}{A valid url as character vector of length one based on a resource identifier such as CELEX or Cellar URI.}

\item{type}{The type of data to be retrieved. When type = "text", the returned list contains named elements reflecting the source of each text. When type = "notice", the results return an XML notice associated with the url.}

\item{notice}{If type = "notice", controls what kind of metadata are returned by the notice.}

\item{language_1}{The priority language in which the data will be attempted to be retrieved, in ISO 639 2-char code}

\item{language_2}{If data not available in \code{language_1}, try \code{language_2}}

\item{language_3}{If data not available in \code{language_2}, try \code{language_3}}

\item{include_breaks}{If TRUE, text includes tags showing where pages ("---pagebreak---", for pdfs) and documents ("---documentbreak---") were concatenated}

\item{html_text}{Choose whether to read text from html using \code{\link[rvest:html_text]{rvest::html_text2()}} ("text2") or \code{\link[rvest:html_text]{rvest::html_text()}} ("text")}
}
\value{
A character vector of length one containing the result. When \code{type = "text"}, named character vector where the name contains the source of the text.
}
\description{
Get titles, texts, identifiers and XML notices for EU resources.
}
\examples{
\donttest{
elx_fetch_data(url = "http://publications.europa.eu/resource/celex/32014R0001", type = "title")
}
}
